// <auto-generated />
using System;
using ListDevice.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListDevice.Infrastructure.Migrations
{
    [DbContext(typeof(ListDeviceContext))]
    [Migration("20251001152828_migV2")]
    partial class migV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ListDevice.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Desktop"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Printer"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Switch"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "screen"
                        });
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.CategoryProperty", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("CategoryProperties", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 3,
                            PropertyId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            PropertyId = 11
                        },
                        new
                        {
                            CategoryId = 3,
                            PropertyId = 12
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 13
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 14
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 5
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 12
                        },
                        new
                        {
                            CategoryId = 1,
                            PropertyId = 7
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 10
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 5
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 12
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 15
                        },
                        new
                        {
                            CategoryId = 4,
                            PropertyId = 16
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 2
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 13
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 14
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 5
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 12
                        },
                        new
                        {
                            CategoryId = 2,
                            PropertyId = 7
                        },
                        new
                        {
                            CategoryId = 5,
                            PropertyId = 12
                        },
                        new
                        {
                            CategoryId = 5,
                            PropertyId = 15
                        },
                        new
                        {
                            CategoryId = 5,
                            PropertyId = 16
                        });
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentUserId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PropertiesJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrentUserId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcquisitionDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 1,
                            DeviceName = "HP LaserJet Pro",
                            Memo = "Office Printer",
                            PropertiesJson = "{\"IP Address\":\"192.168.1.25\",\"Is Color\":\"True\",\"Brand\":\"HP\"}",
                            SerialNo = "PR-12345"
                        },
                        new
                        {
                            Id = 2,
                            AcquisitionDate = new DateTime(2022, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryId = 2,
                            CurrentUserId = 1,
                            DeviceName = "Dell Latitude",
                            Memo = "For IT Department",
                            PropertiesJson = "{\"Processor\":\"Intel Core i7\",\"HD\":\"512GB SSD\",\"RAM\":\"16GB\",\"Display\":\"15.6 inch\",\"IP Address\":\"192.168.1.50\",\"Brand\":\"Dell\",\"Current User\":\"1\"}",
                            SerialNo = "LT-67890"
                        });
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InputType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Properties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InputType = "text",
                            PropertyName = "HD"
                        },
                        new
                        {
                            Id = 2,
                            InputType = "text",
                            PropertyName = "Processor"
                        },
                        new
                        {
                            Id = 3,
                            InputType = "text",
                            PropertyName = "Dimensions"
                        },
                        new
                        {
                            Id = 4,
                            InputType = "text",
                            PropertyName = "MAC Address"
                        },
                        new
                        {
                            Id = 5,
                            InputType = "text",
                            PropertyName = "IP Address"
                        },
                        new
                        {
                            Id = 6,
                            InputType = "checkbox",
                            PropertyName = "Allow USB"
                        },
                        new
                        {
                            Id = 7,
                            InputType = "lookup",
                            PropertyName = "Current User"
                        },
                        new
                        {
                            Id = 8,
                            InputType = "text",
                            PropertyName = "Network Speed"
                        },
                        new
                        {
                            Id = 9,
                            InputType = "text",
                            PropertyName = "Operating System"
                        },
                        new
                        {
                            Id = 10,
                            InputType = "number",
                            PropertyName = "Ports"
                        },
                        new
                        {
                            Id = 11,
                            InputType = "checkbox",
                            PropertyName = "Is Color"
                        },
                        new
                        {
                            Id = 12,
                            InputType = "text",
                            PropertyName = "Brand"
                        },
                        new
                        {
                            Id = 13,
                            InputType = "text",
                            PropertyName = "RAM"
                        },
                        new
                        {
                            Id = 14,
                            InputType = "text",
                            PropertyName = "Display"
                        },
                        new
                        {
                            Id = 15,
                            InputType = "text",
                            PropertyName = "X…"
                        },
                        new
                        {
                            Id = 16,
                            InputType = "text",
                            PropertyName = "Y…"
                        });
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "IT",
                            FullName = "Mohamed Mostafa"
                        },
                        new
                        {
                            Id = 2,
                            Department = "HR",
                            FullName = "Sara Ali"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Finance",
                            FullName = "Omar Hassan"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Marketing",
                            FullName = "Nada Ibrahim"
                        },
                        new
                        {
                            Id = 5,
                            Department = "Operations",
                            FullName = "Ahmed Youssef"
                        });
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.CategoryProperty", b =>
                {
                    b.HasOne("ListDevice.Domain.Entities.Category", "Category")
                        .WithMany("CategoryProperties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListDevice.Domain.Entities.Property", "Property")
                        .WithMany("CategoryProperties")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.Device", b =>
                {
                    b.HasOne("ListDevice.Domain.Entities.Category", "Category")
                        .WithMany("Devices")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ListDevice.Domain.Entities.User", "CurrentUser")
                        .WithMany("Devices")
                        .HasForeignKey("CurrentUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("CurrentUser");
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryProperties");

                    b.Navigation("Devices");
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.Property", b =>
                {
                    b.Navigation("CategoryProperties");
                });

            modelBuilder.Entity("ListDevice.Domain.Entities.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
